SELECT
/* 

[NAME]

- HANA_Memory_Reclaims_1.00.80+

[DESCRIPTION]

- Memory reclaim operations

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]

- M_MEMORY_RECLAIM_STATISTICS available starting with Rev. 1.00.80
- RESET can be performed via:

  ALTER SYSTEM RESET MONITORING VIEW M_MEMORY_RECLAIM_STATISTICS_RESET

- RESET not available for COMPACTION

[VALID FOR]

- Revisions:              >= 1.00.80

[SQL COMMAND VERSION]

- 2016/12/08:  1.0 (initial version)
- 2019/03/06:  1.1 (DATA_SOURCE included)
- 2020/01/01:  1.2 (COMPACTION included)
- 2020/11/10:  1.3 (ACTIVITY filter added)

[INVOLVED TABLES]

- M_COMPACTION_THREAD
- M_MEMORY_RECLAIM_STATISTICS
- M_MEMORY_RECLAIM_STATISTICS_RESET

[INPUT PARAMETERS]

- HOST

  Host name

  'saphana01'     --> Specific host saphana01
  'saphana%'      --> All hosts starting with saphana
  '%'             --> All hosts

- PORT

  Port number

  '30007'         --> Port 30007
  '%03'           --> All ports ending with '03'
  '%'             --> No restriction to ports

- ACTIVITY

  Memory reclaim activity

  'RECLAIM'       --> Show details for RECLAIM operations
  '%'             --> No restriction related to reclaim activity

- DATA_SOURCE

  Source of analysis data

  'CURRENT'       --> Data from memory information (M_ tables)
  'RESET'         --> Data from reset information (*_RESET tables)

[OUTPUT PARAMETERS]

- HOST:         Host name
- PORT:         Port
- ACTIVITY:     Reclaim activity         
- COUNT:        Number of operations
- SUM_TIME_S:   Total duration (s)
- MAX_TIME_S:   Maximum duration per operation (s)
- AVG_TIME_S:   Average duration per operation (s)
- SUM_SIZE_MB:  Total size (MB)
- MAX_SIZE_MB:  Maximum size per operation (MB)
- AVG_SIZE_MB:  Average size per operation (MB)

[EXAMPLE OUTPUT]

----------------------------------------------------------------------------------------------------------------
|HOST   |PORT |ACTIVITY       |COUNT     |SUM_TIME_S|MAX_TIME_S|AVG_TIME_S|SUM_SIZE_MB |MAX_SIZE_MB|AVG_SIZE_MB|
----------------------------------------------------------------------------------------------------------------
|saphana|30003|RECLAIM        |    465402|  43387.53|      6.21|      0.09|        0.00|       0.00|       0.00|
|saphana|30003|SYNCHRONIZATION|         0|      0.00|      0.00|      0.00|        0.00|       0.00|       0.00|
|saphana|30003|DEFRAGMENTATION|         0|      0.00|      0.00|      0.00| 50505195.31|    5465.17|     108.51|
|saphana|30003|SHRINK         |         0|      0.00|      0.00|      0.00|   214320.04|    3694.23|       0.46|
|saphana|30003|COMPACTION     |       164|      0.00|      0.00|      0.00|   250745.95|    3636.00|    1694.22|
----------------------------------------------------------------------------------------------------------------

*/

  HOST,
  LPAD(PORT, 5) PORT,
  KEY ACTIVITY,
  LPAD(           MAP(COUNT,         NULL, 0, COUNT),                               10) COUNT,
  LPAD(TO_DECIMAL(MAP(SUM_TIME_MS,   NULL, 0, SUM_TIME_MS / 1000),          10, 2), 10) SUM_TIME_S,
  LPAD(TO_DECIMAL(MAP(MAX_TIME_MS,   NULL, 0, MAX_TIME_MS / 1000),          10, 2), 10) MAX_TIME_S,
  LPAD(TO_DECIMAL(MAP(AVG_TIME_MS,   NULL, 0, AVG_TIME_MS / 1000),          10, 2), 10) AVG_TIME_S,
  LPAD(TO_DECIMAL(MAP(SUM_SIZE_BYTE, NULL, 0, SUM_SIZE_BYTE / 1024 / 1024), 10, 2), 12) SUM_SIZE_MB,
  LPAD(TO_DECIMAL(MAP(MAX_SIZE_BYTE, NULL, 0, MAX_SIZE_BYTE / 1024 / 1024), 10, 2), 11) MAX_SIZE_MB,
  LPAD(TO_DECIMAL(MAP(AVG_SIZE_BYTE, NULL, 0, AVG_SIZE_BYTE / 1024 / 1024), 10, 2), 11) AVG_SIZE_MB
FROM
( SELECT
    M.HOST,
    M.PORT,
    L.LINE_NO,
    L.KEY,
    CASE L.LINE_NO
      WHEN 1 THEN M.MEMORY_RECLAIM_COUNT
      WHEN 5 THEN M.NUM_COMPACTIONS
      ELSE NULL
    END COUNT,
    CASE L.LINE_NO
      WHEN 1 THEN M.SUM_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.SUM_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.SUM_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.SUM_MEMORY_OBJECT_UNLOAD_DURATION
    END SUM_TIME_MS,
    CASE L.LINE_NO
      WHEN 1 THEN M.MAX_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.MAX_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.MAX_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.MAX_MEMORY_OBJECT_UNLOAD_DURATION
    END MAX_TIME_MS,
    CASE L.LINE_NO
      WHEN 1 THEN M.AVG_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.AVG_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.AVG_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.AVG_MEMORY_OBJECT_UNLOAD_DURATION
    END AVG_TIME_MS,
    CASE L.LINE_NO
      WHEN 3 THEN M.SUM_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.SUM_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.SUM_SIZE_COMPACTION_REQUESTS
    END SUM_SIZE_BYTE,
    CASE L.LINE_NO
      WHEN 3 THEN M.MAX_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.MAX_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.MAX_SIZE_COMPACTION_REQUESTS
    END MAX_SIZE_BYTE,
    CASE L.LINE_NO
      WHEN 3 THEN M.AVG_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.AVG_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.AVG_SIZE_COMPACTION_REQUESTS
    END AVG_SIZE_BYTE
  FROM
  ( SELECT                   /* Modification section */
      '%' HOST,
      '%03' PORT,
      '%' ACTIVITY,
      'CURRENT' DATA_SOURCE                  /* CURRENT, RESET */
    FROM
      DUMMY
  ) BI,
  ( SELECT  1 LINE_NO, 'RECLAIM' KEY     FROM DUMMY UNION ALL
    SELECT  2,         'SYNCHRONIZATION' FROM DUMMY UNION ALL
    SELECT  3,         'DEFRAGMENTATION' FROM DUMMY UNION ALL
    SELECT  4,         'SHRINK'          FROM DUMMY UNION ALL
    SELECT  5,         'COMPACTION'      FROM DUMMY
  ) L,
  ( SELECT
      'CURRENT' DATA_SOURCE,
      M.HOST,
      M.PORT,
      M.MEMORY_RECLAIM_COUNT,
      M.SUM_MEMORY_RECLAIM_DURATION,
      M.MAX_MEMORY_RECLAIM_DURATION,
      M.AVG_MEMORY_RECLAIM_DURATION,
      M.SUM_SYNCHRONIZATION_DURATION,
      M.MAX_SYNCHRONIZATION_DURATION,
      M.AVG_SYNCHRONIZATION_DURATION,
      M.SUM_DEFRAGMENTATION_DURATION,
      M.MAX_DEFRAGMENTATION_DURATION,
      M.AVG_DEFRAGMENTATION_DURATION,
      M.SUM_MEMORY_OBJECT_UNLOAD_DURATION,
      M.MAX_MEMORY_OBJECT_UNLOAD_DURATION,
      M.AVG_MEMORY_OBJECT_UNLOAD_DURATION,
      M.SUM_DEFRAGMENTATION_SIZE,
      M.MAX_DEFRAGMENTATION_SIZE,
      M.AVG_DEFRAGMENTATION_SIZE,
      M.SUM_MEMORY_OBJECT_UNLOAD_SIZE,
      M.MAX_MEMORY_OBJECT_UNLOAD_SIZE,
      M.AVG_MEMORY_OBJECT_UNLOAD_SIZE,
      C.NUM_COMPACTIONS,
      C.SUM_SIZE_COMPACTION_REQUESTS,
      C.MAX_SIZE_COMPACTION_REQUESTS,
      C.AVG_SIZE_COMPACTION_REQUESTS
    FROM
      M_MEMORY_RECLAIM_STATISTICS M,
      M_COMPACTION_THREAD C
    WHERE
      M.HOST = C.HOST AND
      M.PORT = C.PORT
    UNION ALL
    SELECT
      'RESET' DATA_SOURCE,
      M.HOST,
      M.PORT,
      M.MEMORY_RECLAIM_COUNT,
      M.SUM_MEMORY_RECLAIM_DURATION,
      M.MAX_MEMORY_RECLAIM_DURATION,
      M.AVG_MEMORY_RECLAIM_DURATION,
      M.SUM_SYNCHRONIZATION_DURATION,
      M.MAX_SYNCHRONIZATION_DURATION,
      M.AVG_SYNCHRONIZATION_DURATION,
      M.SUM_DEFRAGMENTATION_DURATION,
      M.MAX_DEFRAGMENTATION_DURATION,
      M.AVG_DEFRAGMENTATION_DURATION,
      M.SUM_MEMORY_OBJECT_UNLOAD_DURATION,
      M.MAX_MEMORY_OBJECT_UNLOAD_DURATION,
      M.AVG_MEMORY_OBJECT_UNLOAD_DURATION,
      M.SUM_DEFRAGMENTATION_SIZE,
      M.MAX_DEFRAGMENTATION_SIZE,
      M.AVG_DEFRAGMENTATION_SIZE,
      M.SUM_MEMORY_OBJECT_UNLOAD_SIZE,
      M.MAX_MEMORY_OBJECT_UNLOAD_SIZE,
      M.AVG_MEMORY_OBJECT_UNLOAD_SIZE,
      0 NUM_COMPACTIONS,
      0 SUM_SIZE_COMPACTION_REQUESTS,
      0 MAX_SIZE_COMPACTION_REQUESTS,
      0 AVG_SIZE_COMPACTION_REQUESTS
    FROM
      M_MEMORY_RECLAIM_STATISTICS_RESET M
  ) M
  WHERE
    M.HOST LIKE BI.HOST AND
    TO_VARCHAR(M.PORT) LIKE BI.PORT AND
    M.DATA_SOURCE = BI.DATA_SOURCE AND
    L.KEY LIKE BI.ACTIVITY
  GROUP BY
    M.HOST,
    M.PORT,
    L.LINE_NO,
    L.KEY,
    CASE L.LINE_NO
      WHEN 1 THEN M.MEMORY_RECLAIM_COUNT
      WHEN 5 THEN M.NUM_COMPACTIONS
      ELSE NULL
    END,
    CASE L.LINE_NO
      WHEN 1 THEN M.SUM_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.SUM_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.SUM_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.SUM_MEMORY_OBJECT_UNLOAD_DURATION
    END,
    CASE L.LINE_NO
      WHEN 1 THEN M.MAX_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.MAX_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.MAX_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.MAX_MEMORY_OBJECT_UNLOAD_DURATION
    END,
    CASE L.LINE_NO
      WHEN 1 THEN M.AVG_MEMORY_RECLAIM_DURATION
      WHEN 2 THEN M.AVG_SYNCHRONIZATION_DURATION
      WHEN 3 THEN M.AVG_DEFRAGMENTATION_DURATION
      WHEN 4 THEN M.AVG_MEMORY_OBJECT_UNLOAD_DURATION
    END,
    CASE L.LINE_NO
      WHEN 3 THEN M.SUM_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.SUM_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.SUM_SIZE_COMPACTION_REQUESTS
    END,
    CASE L.LINE_NO
      WHEN 3 THEN M.MAX_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.MAX_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.MAX_SIZE_COMPACTION_REQUESTS
    END,
    CASE L.LINE_NO
      WHEN 3 THEN M.AVG_DEFRAGMENTATION_SIZE
      WHEN 4 THEN M.AVG_MEMORY_OBJECT_UNLOAD_SIZE
      WHEN 5 THEN M.AVG_SIZE_COMPACTION_REQUESTS
    END
)
ORDER BY
  HOST,
  PORT,
  LINE_NO