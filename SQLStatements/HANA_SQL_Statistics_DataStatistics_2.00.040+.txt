WITH 

/* 

[NAME]

- HANA_SQL_Statistics_DataStatistics_2.00.040+

[DESCRIPTION]

- Overview of data statistics used by the query optimizer for determining a good execution plan

[SOURCE]

- SAP Note 1969700

[DETAILS AND RESTRICTIONS]

- M_SYSTEM_DATA_STATISTICS available starting with 2.00.040
- Specifying an exact schema and table name is mandatory, otherwise the result set will be empty or the following error is thrown:

  [500]: predicates are required in a where clause: M_SYSTEM_DATA_STATISTICS needs predicates on columns (connected by AND if more than one): an equal predicate on DATA_SOURCE_SCHEMA_NAME, an equal predicate on DATA_SOURCE_OBJECT_NAME 

- With SAP HANA <= 2.00.055 unexpected MIN VALUE or MAX VALUE strings (e.g. \x80) can result in errors like (bug 261976):

  Conversion of parameter/column (1) from data type NVARCHAR to UCS2 (LE) failed

  In this case you can remove the MIN_VALUE / MAX_VALUE columns from the selection

[VALID FOR]

- Revisions:              >= 2.00.040

[SQL COMMAND VERSION]

- 2019/09/29:  1.0 (initial version)
- 2020/02/07:  1.1 (INDIV_COSTS added)
- 2021/01/02:  1.2 (ONLY_PK_AND_UNIQUE_COLUMNS included)
- 2021/02/08:  1.3 (transition from deprecated DATA_STATISTICS to M_DATA_STATISTICS and JSON_VALUE extraction)
- 2022/08/18:  1.4 (EXCLUDE_SDA_TABLES included)

[INVOLVED TABLES]

- M_DATA_STATISTICS
- M_SYSTEM_DATA_STATISTICS

[INPUT PARAMETERS]

- STATISTICS_SOURCE:

  'SYSTEM'        --> statistics generated by SAP HANA automatically on the fly
  'USER'          --> statistics generated explicitly by user (CREATE STATISTICS)
  '%'             --> no restriction related to statistics source

- STATISTICS_TYPE

  Data statistics type

  'SIMPLE'        --> only display data statistics of type SIMPLE
  '%'             --> No restriction to specific data statistics type

- SCHEMA_NAME

  Schema name (mandatory, no place holders)

  'SAPSR3'        --> Schema SAPSR3

- TABLE_NAME           

  Table name (mandatory, no place holders)

  'T000'          --> Table T000

- COLUMN_NAMES

  List of column names

  'X'             --> Show data statistics for column X
  'X,Y'           --> Show data statistics for column group of X and Y
  '%'             --> No column restriction (only single column statistics are shown, no column groups)

- ONLY_PK_AND_UNIQUE_COLUMNS

  Possibility to return only columns related to primary key or unique index

  'X'             --> Show information only for primary key / unique index columns
  ' '             --> No restriction related to primary key / unique index columns

- EXCLUDE_SDA_TABLES

  Possibility to exclude virtual SDA tables

  'X'             --> Exclude virtual SDA tables
  ' '             --> Show all tables independent of type

[OUTPUT PARAMETERS]

- TYPE:                    Data statistics type
- SCHEMA_NAME:             Schema name
- TABLE_NAME:              Table name
- COLUMNS:                 Columns (individual columns or column groups listed via comma-separated column list)
- SOURCE:                  SYSTEM in case of system generated, USER in case of user defined
- LAST_REFRESH:            Last data statistics refresh time
- COUNT:                   Record count
- NUM_DISTINCT:            Number of distinct values
- NUM_NULLS:               Number of NULL values
- MIN_VALUE:               Minimum column value
- MAX_VALUE:               Maximum column value
- BUCKETS:                 Histogram buckets
- INDIV_COSTS:             Cost factor for leading column of inverted individual indexes (SAP Note 2600076)
- TOP_1:                   Top 1 histogram bucket (e.g. frequency and value of most frequent column value in case of frequency histograms)
- TOP_2:                   Top 2 histogram bucket
- TOP_3:                   Top 3 histogram bucket
- DATA_STATISTICS_CONTENT: Raw data statistics details in JSON format for SYSTEM statistics, statistics name for USER statistics

[EXAMPLE OUTPUT]


|TYPE  |SCHEMA_NAME|TABLE_NAME|COLUMNS|LAST_REFERESH      |COUNT       |NUM_DISTINCT|NUM_NULLS|MIN_VALUE|MAX_VALUE|BUCKETS|TOP_1                              |TOP_2                              |TOP_3                              ||

|SIMPLE|SYSTEM     |AAA       |X      |2019/09/29 11:27:29|     1000000|      1000  |        0|1        |1000     |       |                                   |                                   |                                   |{"LastRefreshProperties":{"DISTINCT COUNT":"1000","NULL COUNT":"0","MIN VALUE":"1","MAX VALUE":"1000","COUNT":"1000000","MIN MAX IS VALID":"1","DELTA FLAGS":"8193","MAIN FLAGS":"1"}}                                                                                                                                                                                                                                                                                                                                                                                                                                           |
|TOPK  |SYSTEM     |AAA       |X      |2019/09/29 11:27:29|     1000000|      1000  |        0|1        |1000     |     10|{"FREQUENCY":1000.000000,"VALUE":1}|{"FREQUENCY":1000.000000,"VALUE":2}|{"FREQUENCY":1000.000000,"VALUE":3}|{"StatisticsContent":{"TopK":[{"FREQUENCY":1000.000000,"VALUE":"1"},{"FREQUENCY":1000.000000,"VALUE":"2"},{"FREQUENCY":1000.000000,"VALUE":"3"},{"FREQUENCY":1000.000000,"VALUE":"4"},{"FREQUENCY":1000.000000,"VALUE":"5"},{"FREQUENCY":1000.000000,"VALUE":"6"},{"FREQUENCY":1000.000000,"VALUE":"7"},{"FREQUENCY":1000.000000,"VALUE":"8"},{"FREQUENCY":1000.000000,"VALUE":"9"},{"FREQUENCY":1000.000000,"VALUE":"10"}]},"LastRefreshProperties":{"BUCKETS":"10","DISTINCT COUNT":"1000","NULL COUNT":"0","MIN VALUE":"1","MAX VALUE":"1000","COUNT":"1000000","MIN MAX IS VALID":"1","DELTA FLAGS":"8193","MAIN FLAGS":"1"}}|


*/

BASIS_INFO AS
( SELECT                      /* Modification section */
    'USER' STATISTICS_SOURCE,
    '%' STATISTICS_TYPE,
    CURRENT_USER SCHEMA_NAME,
    '%' TABLE_NAME,
    '%' COLUMN_NAMES,
    ' ' ONLY_PK_AND_UNIQUE_COLUMNS,
    'X' EXCLUDE_SDA_TABLES
  FROM
    DUMMY
)
SELECT
  DATA_STATISTICS_TYPE TYPE,
  DATA_SOURCE_SCHEMA_NAME SCHEMA_NAME,
  DATA_SOURCE_OBJECT_NAME || MAP(DATA_SOURCE_PART_ID, 0, '', CHAR(32) || '(' || DATA_SOURCE_PART_ID || ')') TABLE_NAME,
  DATA_SOURCE_COLUMN_NAMES COLUMNS,
  SOURCE,
  TO_VARCHAR(LAST_REFRESH_TIME, 'YYYY/MM/DD HH24:MI:SS') LAST_REFRESH,
  IFNULL(LPAD(COUNT, 12), '') COUNT,
  IFNULL(LPAD(NUM_DISTINCT, 12), '') NUM_DISTINCT,
  IFNULL(LPAD(NUM_NULLS, 9), '') NUM_NULLS,
  IFNULL(MIN_VALUE, '') MIN_VALUE,
  IFNULL(MAX_VALUE, '') MAX_VALUE,
  IFNULL(LPAD(BUCKETS, 7), '') BUCKETS,
  CASE DATA_STATISTICS_TYPE
    WHEN 'TOPK' THEN
      LPAD(TO_DECIMAL(MAP(COUNT, 0, 0, ( FREQ_1 * FREQ_1 + FREQ_2 * FREQ_2 + FREQ_3 * FREQ_3 + FREQ_4 * FREQ_4 + FREQ_5 * FREQ_5 + 
        FREQ_6 * FREQ_6 + FREQ_7 * FREQ_7 + FREQ_8 * FREQ_8 + FREQ_9 * FREQ_9 + FREQ_10 * FREQ_10 + 
        MAP(OTHER_DISTINCT, 0, 0, OTHER_DISTINCT * ( OTHER_COUNT / OTHER_DISTINCT ) * ( OTHER_COUNT / OTHER_DISTINCT ) ) ) / COUNT), 12, 0), 12) 
    ELSE ''
  END INDIV_COSTS,
  IFNULL(TOP_1, '') TOP_1,
  IFNULL(TOP_2, '') TOP_2,
  IFNULL(TOP_3, '') TOP_3
FROM
( SELECT
    S.DATA_STATISTICS_TYPE,	
    S.DATA_SOURCE_SCHEMA_NAME,
    S.DATA_SOURCE_OBJECT_NAME,
    S.DATA_SOURCE_PART_ID,
    S.DATA_SOURCE_COLUMN_NAMES,
    S.SOURCE,
    S.LAST_REFRESH_TIME,
    S.COUNT,
    S.NUM_DISTINCT,
    S.NUM_NULLS,
    S.MIN_VALUE,
    S.MAX_VALUE,
    S.BUCKETS,
    IFNULL(S.TOP_1, '') TOP_1,
    IFNULL(S.TOP_2, '') TOP_2,
    IFNULL(S.TOP_3, '') TOP_3,
    TO_DECIMAL(FREQ_1) FREQ_1,
    TO_DECIMAL(FREQ_2) FREQ_2,
    TO_DECIMAL(FREQ_3) FREQ_3,
    TO_DECIMAL(FREQ_4) FREQ_4,
    TO_DECIMAL(FREQ_5) FREQ_5,
    TO_DECIMAL(FREQ_6) FREQ_6,
    TO_DECIMAL(FREQ_7) FREQ_7,
    TO_DECIMAL(FREQ_8) FREQ_8,
    TO_DECIMAL(FREQ_9) FREQ_9,
    TO_DECIMAL(FREQ_10) FREQ_10,
    S.COUNT - FREQ_1 - FREQ_2 - FREQ_3 - FREQ_4 - FREQ_5 - FREQ_6 - FREQ_7 - FREQ_8 - FREQ_9 - FREQ_10 OTHER_COUNT,
    GREATEST(0, S.NUM_DISTINCT - 10) OTHER_DISTINCT,
    S.DATA_STATISTICS_CONTENT
  FROM
  ( SELECT
      'SYSTEM' SOURCE,
      S.DATA_STATISTICS_TYPE,
      S.DATA_SOURCE_SCHEMA_NAME,
      S.DATA_SOURCE_OBJECT_NAME,
      S.DATA_SOURCE_PART_ID,
      S.DATA_SOURCE_COLUMN_NAMES,
      S.LAST_REFRESH_TIME,
      S.DATA_STATISTICS_CONTENT,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.COUNT') COUNT,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.DISTINCT COUNT') NUM_DISTINCT,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.NULL COUNT') NUM_NULLS,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.MIN VALUE') MIN_VALUE,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.MAX VALUE') MAX_VALUE,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.BUCKETS') BUCKETS,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[0]') TOP_1,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[1]') TOP_2,
      JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[2]') TOP_3,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[0].FREQUENCY')), 0) FREQ_1,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[1].FREQUENCY')), 0) FREQ_2,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[2].FREQUENCY')), 0) FREQ_3,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[3].FREQUENCY')), 0) FREQ_4,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[4].FREQUENCY')), 0) FREQ_5,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[5].FREQUENCY')), 0) FREQ_6,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[6].FREQUENCY')), 0) FREQ_7,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[7].FREQUENCY')), 0) FREQ_8,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[8].FREQUENCY')), 0) FREQ_9,
      IFNULL(TO_DECIMAL(JSON_VALUE(S.DATA_STATISTICS_CONTENT, '$.*.TopK[9].FREQUENCY')), 0) FREQ_10
    FROM
      BASIS_INFO BI,
      M_SYSTEM_DATA_STATISTICS S
    WHERE
      'SYSTEM' LIKE BI.STATISTICS_SOURCE AND
      S.DATA_STATISTICS_TYPE LIKE BI.STATISTICS_TYPE AND
      S.DATA_SOURCE_SCHEMA_NAME = BI.SCHEMA_NAME AND 
      S.DATA_SOURCE_OBJECT_NAME = BI.TABLE_NAME AND
      S.DATA_SOURCE_COLUMN_NAMES LIKE BI.COLUMN_NAMES AND
      ( BI.ONLY_PK_AND_UNIQUE_COLUMNS = ' ' OR
        BI.ONLY_PK_AND_UNIQUE_COLUMNS = 'X' AND S.DATA_SOURCE_COLUMN_NAMES IN 
        ( SELECT 
            COLUMN_NAME 
          FROM 
            INDEX_COLUMNS IC 
          WHERE 
            IC.SCHEMA_NAME = S.DATA_SOURCE_SCHEMA_NAME AND 
            IC.TABLE_NAME = S.DATA_SOURCE_OBJECT_NAME AND 
            IC.CONSTRAINT IN ( 'NOT NULL UNIQUE' , 'PRIMARY KEY', 'UNIQUE' )
        )
      )
    UNION ALL
    SELECT
      'USER' SOURCE,
      S.DATA_STATISTICS_TYPE,
      S.DATA_SOURCE_SCHEMA_NAME,
      S.DATA_SOURCE_OBJECT_NAME,
      S.DATA_SOURCE_PART_ID,
      S.DATA_SOURCE_COLUMN_NAMES,
      TO_VARCHAR(S.LAST_REFRESH_TIME, 'YYYY/MM/DD HH24:MI:SS')  LAST_REFRESH,
      DATA_STATISTICS_NAME DATA_STATISTICS_DETAILS,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.COUNT'), '') COUNT,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.DISTINCT COUNT'), '') NUM_DISTINCT,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.NULL COUNT'), '') NUM_NULLS,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.MINVALUE STRING'), '') MIN_VALUE,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.MAXVALUE STRING'), '') MAX_VALUE,
      IFNULL(JSON_VALUE(DATA_STATISTICS_CONTENT, '$.LastRefreshProperties.CREATE BUCKETS'), '') BUCKETS,
      '' TOP_1,
      '' TOP_2,
      '' TOP_3,
      0 FREQ_1,
      0 FREQ_2,
      0 FREQ_3,
      0 FREQ_4,
      0 FREQ_5,
      0 FREQ_6,
      0 FREQ_7,
      0 FREQ_8,
      0 FREQ_9,
      0 FREQ_10
    FROM
      BASIS_INFO BI,
      M_DATA_STATISTICS S
    WHERE
      'USER' LIKE BI.STATISTICS_SOURCE AND
      S.DATA_STATISTICS_TYPE LIKE BI.STATISTICS_TYPE AND
      S.DATA_SOURCE_SCHEMA_NAME LIKE BI.SCHEMA_NAME AND 
      S.DATA_SOURCE_OBJECT_NAME LIKE BI.TABLE_NAME AND
      REPLACE(S.DATA_SOURCE_COLUMN_NAMES, CHAR(32), '') LIKE REPLACE(BI.COLUMN_NAMES, CHAR(32), '') AND
      ( BI.ONLY_PK_AND_UNIQUE_COLUMNS = ' ' OR
        BI.ONLY_PK_AND_UNIQUE_COLUMNS = 'X' AND S.DATA_SOURCE_COLUMN_NAMES IN 
        ( SELECT 
            COLUMN_NAME 
          FROM 
            INDEX_COLUMNS IC 
          WHERE 
            IC.SCHEMA_NAME = S.DATA_SOURCE_SCHEMA_NAME AND 
            IC.TABLE_NAME = S.DATA_SOURCE_OBJECT_NAME AND 
            IC.CONSTRAINT IN ( 'NOT NULL UNIQUE' , 'PRIMARY KEY', 'UNIQUE' )
        )
      ) AND
      ( BI.EXCLUDE_SDA_TABLES = ' ' OR
        NOT EXISTS ( SELECT * FROM TABLES T WHERE T.SCHEMA_NAME = S.DATA_SOURCE_SCHEMA_NAME AND T.TABLE_NAME = S.DATA_SOURCE_OBJECT_NAME AND T.TABLE_TYPE = 'VIRTUAL' )
      )
  ) S
)
ORDER BY
  DATA_STATISTICS_TYPE,
  DATA_SOURCE_SCHEMA_NAME,
  DATA_SOURCE_OBJECT_NAME,
  DATA_SOURCE_COLUMN_NAMES,
  DATA_SOURCE_PART_ID,
  SOURCE
